// Core Mixins

// Media breakpoints
// ------------------------
@mixin clad-media-breakpoint-up($breakpoint) {
  @if $breakpoint == xs {
    @content;
  } @else if $breakpoint == sm {
    @media (min-width: $clad-breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $clad-breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $clad-breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $clad-breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: $clad-breakpoint-xxl) { @content; }
  }
}

@mixin clad-media-breakpoint-down($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $clad-breakpoint-sm - 0.02) { @content; }
  } @else if $breakpoint == sm {
    @media (max-width: $clad-breakpoint-md - 0.02) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: $clad-breakpoint-lg - 0.02) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: $clad-breakpoint-xl - 0.02) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: $clad-breakpoint-xxl - 0.02) { @content; }
  }
}

@mixin clad-media-breakpoint-between($min, $max) {
  @media (min-width: if($min == xs, 0, v#{a}r(--clad-breakpoint-#{$min}))) and (max-width: v#{a}r(--clad-breakpoint-#{$max}) - 0.02) {
    @content;
  }
}

// Buttons
// ------------------------
@mixin clad-button-variant($bg-color, $border-color, $text-color: #fff) {
  color: $text-color;
  background-color: $bg-color;
  border-color: $border-color;
  
  &:hover, &:focus {
    color: $text-color;
    background-color: darken($bg-color, 7.5%);
    border-color: darken($border-color, 10%);
  }
  
  &:focus, &.focus {
    box-shadow: 0 0 0 0.2rem rgba($bg-color, 0.25);
  }
  
  &.disabled, &:disabled {
    color: $text-color;
    background-color: $bg-color;
    border-color: $border-color;
    opacity: 0.65;
  }
}

@mixin clad-button-outline-variant($color) {
  color: $color;
  border-color: $color;
  background-color: transparent;
  
  &:hover {
    color: #fff;
    background-color: $color;
    border-color: $color;
  }
  
  &:focus, &.focus {
    box-shadow: 0 0 0 0.2rem rgba($color, 0.25);
  }
  
  &.disabled, &:disabled {
    color: $color;
    background-color: transparent;
    opacity: 0.65;
  }
}

// Gradients
// ------------------------
@mixin clad-gradient-x($start-color, $end-color, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
}

@mixin clad-gradient-y($start-color, $end-color, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
}

@mixin clad-gradient-directional($start-color, $end-color, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
}

// Box shadows
// ------------------------
@mixin clad-box-shadow($shadow...) {
  box-shadow: $shadow;
}

// Transitions
// ------------------------
@mixin clad-transition($transition...) {
  transition: $transition;
}

@mixin clad-transition-fade() {
  @include clad-transition(opacity var(--clad-transition-fade));
}

// Typography
// ------------------------
@mixin clad-text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Flexbox
// ------------------------
@mixin clad-flex-row() {
  display: flex;
  flex-direction: row;
}

@mixin clad-flex-column() {
  display: flex;
  flex-direction: column;
}

@mixin clad-flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Grid
// ------------------------
@mixin clad-grid($columns: 12, $gap: var(--clad-spacer-3)) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Animations
// ------------------------
@mixin clad-animation($animation...) {
  animation: $animation;
}

@mixin clad-keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// Accessibility
// ------------------------
@mixin clad-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin clad-sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

// Preferred reduced motion
// ------------------------
@mixin clad-reduce-motion() {
  @media (prefers-reduced-motion: reduce) {
    transition: none;
    animation: none;
  }
}